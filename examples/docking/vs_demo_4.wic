steps:
  extract_pdbbind_refined:
    in:
      # https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.query.html
      # The query() method uses a slightly modified Python syntax by default.
      # For example, the & and | (bitwise) operators have the precedence of their
      # boolean cousins, and and or. This is syntactically valid Python, however
      # the semantics are different.
      query: !ii '(Kd_Ki == "Kd") and (value < 0.001)'
      max_row: !ii 1 #25 # Use 1 for CI
      convert_Kd_dG: !ii True
      output_txt_path: !ii binding_data.txt
    out:
    - output_txt_path: !& binding_data.txt
    - output_pdb_paths: !& pdbbind_pdbs
    - output_sdf_paths: !& pdbbind_sdfs
    - experimental_dGs: !& exp_dGs
    - pdb_ids: !& pdbids

  config_tag_pdb:
    scatter: [pdb_id]
    in:
      pdb_id: !* pdbids
      filter: !ii False
    out:
    - output_config_string: !& pdb_id_str
  pdb:
    scatter: [config]
    in:
      output_pdb_path: !ii rcsb_protein.pdb
      config: !* pdb_id_str
    out:
    - output_pdb_path: !& rcsb_protein.pdb

  pdb_fixer:
    in:
      input_pdb_path: !* pdbbind_pdbs
      input_helper_pdb_path: !* rcsb_protein.pdb # Note: PDBFixer utilizes sequence information from this file
      output_pdb_path: !ii pdbbind_pdbfixer.pdb
      add_atoms: !ii heavy
      add_residues: !ii True
      replace_nonstandard: !ii True
      keep_heterogens: !ii none
    scatter: [input_pdb_path, input_helper_pdb_path]
    scatterMethod: dotproduct
    out:
    - output_pdb_path: !& pdbbind_pdbfixer.pdb

  extract_protein:
    scatter: [input_pdb_path]
    in:
      input_pdb_path: !* pdbbind_pdbfixer.pdb
      output_pdb_path: !ii protein.pdb
    out:
    - output_pdb_path: !& protein.pdb

# assign partial charges (ligand)
  convert_pdbqt.wic:
    scatter: [input_pdb_path, input_sdf_path]
    scatterMethod: dotproduct
    in:
      # NOTE: input_pdb_path and input_sdf_path are currently only necessary
      # due to a limitation of the inlineing implementation.
      input_pdb_path: !* protein.pdb
      input_sdf_path: !* pdbbind_sdfs

# rescore protein ligand complexes
  autodock_vina_rescore:
    in:
      input_ligand_pdbqt_path: !* mol_prod.pdbqt
      input_receptor_pdbqt_path: !* receptor_prod.pdbqt
      score_only: !ii True
      #local_only: !ii True
    scatter: [input_ligand_pdbqt_path, input_receptor_pdbqt_path]
    scatterMethod: dotproduct
    out:
    - output_log_path: !& vina_rescore_pdbind.log
    - docking_score: !& rescoring_scores
    - output_ligand_pdbqt_path: !& ligand_rescore.pdbqt

  duplicate:
    in:
      input_pdbqt_singleton_path: !* protein.pdb
      input_pdbqt_array_path: !* ligand_rescore.pdbqt
    scatter: [input_pdbqt_singleton_path, input_pdbqt_array_path]
    scatterMethod: dotproduct
    out:
    - output_pdbqt_path: !& receptor_dup_2D.pdb

  autodock_vina_filter:
    in:
      input_log_paths: !* vina_rescore_pdbind.log
      input_txt_path: !* binding_data.txt
      docking_score_cutoff: !ii -1.0
      max_num_poses_per_ligand: !ii 1
      max_num_poses_total: !ii 1 #25 # Use 1 for CI same as max_row
      rescore: !ii True
      input_ligand_pdbqt_path: !* ligand_rescore.pdbqt
      input_receptor_pdbqt_path: !* receptor_dup_2D.pdb
    out:
    - output_ligand_pdbqt_path: !& ligand_filter.pdbqt
    - output_receptor_pdbqt_path: !& receptor_filter.pdb
    - docking_scores: !& docking_scores
    - experimental_dGs: !& dGs

  setup_pdb.wic:
    in:
      input_pdb_path: !* receptor_filter.pdb
      pdb_path: !ii pdb.pdbqt
      box_path: !ii box.pdb
      box_buffer: !ii 20 # Angstroms
      water_type: !ii spce
      forcefield: !ii amber99sb-ildn
    scatter: [input_pdb_path]
    out:
    - pdb_path: !& pdb.pdbqt
    - box_path: !& box.pdb

  gen_topol_params.wic:
    in:
      input_ligand_pdbqt_path: !* ligand_filter.pdbqt
      input_top_zip_path: !* receptor.zip
      input_receptor_xyz_path: !* receptor.xyz
    scatter: [input_ligand_pdbqt_path, input_top_zip_path, input_receptor_xyz_path]
    scatterMethod: dotproduct

  stability.wic:
    scatter: [crd_path, top_zip_path]
    scatterMethod: dotproduct
    in:
      # NOTE: crd_path and top_zip_path are currently only necessary
      # due to a limitation of the inlineing implementation.
      crd_path: !* complex_vac.pdb
      top_zip_path: !* complex_vac.zip
      nsteps: !ii 100000
      dt: !ii 0.002
      temperature: !ii 298.0
      pressure: !ii 1.0

  autodock_vina_rescore.wic:
    scatter: [input_pdb_path, input_ligand_pdb_path]
    scatterMethod: dotproduct
    in:
      # NOTE: input_pdb_path is currently only necessary
      # due to a limitation of the inlineing implementation.
      input_pdb_path: !* prod.pdb
      input_ligand_pdb_path: !* ligand_GMX.pdb

  scatter_plot:
    in:
      xs: !* dGs
      ys: !* docking_scores
      ys2: !* docking_rescores

wic:
  graphviz:
    label: Virtual Screening Demo
  steps:
    (1, extract_pdbbind_refined):
      wic:
        graphviz:
          label: Extract PDBbind Data
    (2, config_tag_pdb):
      wic:
        inlineable: False
        graphviz:
          label: Specify PDB Code
    (3, pdb):
      wic:
        inlineable: False
        graphviz:
          label: Download PDB File
    (4, pdbfixer):
      wic:
        inlineable: False
        graphviz:
          label: Fix Protein Structure
    (5, extract_protein):
      wic:
        inlineable: False
        graphviz:
          label: Extract protein
    (6, convert_pdbqt.wic):
      wic:
        inlineable: False
    (7, autodock_vina_rescore.wic):
      wic:
        inlineable: False
    (8, duplicate):
      wic:
        graphviz:
          label: Duplicate Receptor PDB
    (9, autodock_vina_filter):
      wic:
        graphviz:
          label: Apply Docking\nScore Cutoff
    (10, setup_pdb.wic):
      wic:
        inlineable: False
        graphviz:
          label: Setup PDB
    (11, gen_topol_params.wic):
      wic:
        inlineable: False
    (12, stability.wic):
      wic:
        inlineable: False
        steps:
          (1, setup_vac_min.wic):
            wic:
              steps:
                (3, solv_ion.wic):
                  wic:
                    steps:
                      (4, genion):
                        out:
                        - output_top_zip_path: !& genion_complex.zip
          (2, basic.wic):
            in: 
              top_zip_path: !* genion_complex.zip
            wic: 
              steps:
                (3, prod.wic):
                  wic:
                    steps:
                      (2, grompp):
                        in:
                          input_top_zip_path: !* genion_complex.zip
                      (3, mdrun):
                      # NOTE: If there are multiple anchors / multiple outputs
                      # in the original source file, you must overload ALL of them.
                      # (because the entire list gets replaced)
                        out:
                        - output_crd_path: !& prod_complex.gro  # overload prod.gro
                        - output_trr_path: !& prod.trr
                        - output_edr_path: !& prod.edr
                      (4, cwl_subinterpreter_analysis.wic):
                        wic:
                          implementation: complex
          (3, analysis.wic):
            wic:
              steps:
                (1, analysis_realtime.wic):
                  wic:
                    implementation: complex
                (2, analysis_final.wic):
                  wic:
                    implementation: complex
    (13, autodock_vina_rescore.wic):
      wic:
        inlineable: False
    (14, scatter_plot):
      wic:
        graphviz:
          label: Plot Experimental\nvs Predicted Binding