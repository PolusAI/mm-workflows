# Use &filename to create a reference to an output. Inputs in later steps can
# use *filename to dereference the filename and create an explicit edge.
inputs:
  nsteps:
    type: int
  dt:
    type: float
  ref-t:
    type: float
  ref-p:
    type: float

steps:
  - config_tag_mdp:
      in:
        nsteps: ~nsteps #10000
        dt: ~dt #0.002
        ref-t: ~ref-t #298.0
        ref-p: ~ref-p #1.0
        config:
          mdp:
            integrator: sd
            rvdw: 1.0
            rcoulomb: 1.0
            coulombtype: PME
            tc-grps: system
            tau-t: 2
            constraints: h-bonds
            nstxout: 100
            nstenergy: 100
            pcoupl: Parrinello-Rahman
            tau-p: 1
            compressibility: 4.5e-5
            comm-mode: Linear
            comm-grps: system
        output_config_string: '&config_tag_mdp_prod'
  - grompp:
      in:
        config: '*config_tag_mdp_prod'
        output_tpr_path: '&prod.tpr'
        input_top_zip_path: '*genion.zip'  # Use the original topology file so
# we don't have to question whether the topology gets messed up after file format conversions.
# (In fact, it is not exactly identical!)
  - mdrun:
      in:
        output_crd_path: '&prod.gro'
        output_trr_path: '&prod.trr' # Explicitly specify for cwl_watcher
        output_edr_path: '&prod.edr'
  - cwl_watcher_analysis.yml:

wic:
  graphviz:
    label: Production
  steps:
    (1, config_tag_mdp):
      wic:
        graphviz:
          label: 'Configure Default\nGromacs Options'
    (2, grompp):
      wic:
        graphviz:
          label: 'Update\nTopology'
    (3, mdrun):
      wic:
        namespace: gpu  # To run MD on GPU
        graphviz:
          label: 'Molecular\nDynamics'
    (4, cwl_watcher_analysis.yml):
      wic:
        backend: protein
        graphviz:
          label: 'Real-time\nAnalysis'
          style: invis # Make this node invisible
