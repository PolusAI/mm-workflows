name: Run WIC CI

on:
  push:
  pull_request:
  repository_dispatch:

jobs:
  dispatch_wic_ci:
    runs-on: ubuntu-latest
    steps:
      - name: Dispatch initiating repository event
        # NOTE: Rather than using "$GITHUB_*", use equivalent "${{ github.* }}".
        # https://docs.github.com/en/actions/learn-github-actions/variables#default-environment-variables
        # https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
        # Example: https://docs.github.com/en/enterprise-cloud@latest/actions/using-workflows/using-github-cli-in-workflows
        if: github.event.action != 'ci_status'
        run: |
          curl -X POST https://api.github.com/repos/${{ github.repository_owner }}/workflow-inference-compiler/dispatches \
          -H 'Accept: application/vnd.github.everest-preview+json' \
          -u ${{ secrets.ACCESS_TOKEN }} \
          --data '{"event_type": "mm-workflows_dispatch", "client_payload": { "repository": "'"${{ github.repository }}"'", "owner": "'"${{ github.repository_owner }}"'", "ref_name": "'"${{ github.ref_name }}"'" }}'
        # 1. All repos should have the same 'ref' branch names for the same feature, i.e. synchronized breaking changes.
        # 2. NOTE: 'event_type' is required in this workflow even if it is not used in receiving workflow. Otherwise: 
        # "message": "Invalid request.\n\n\"event_type\" wasn't supplied."

      - name: Receive CI status from remote repository
        if: github.event.action == 'ci_status'
        run: |
          echo "CI status received from '${{ github.event.client_payload.repository }}'" && \
          ${{ github.event.client_payload.success }}